package app;
import models.Library;
import java.util.*;
import java.io.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;


public class LibraryAPI{
	  private static final String url = "jdbc:mysql://localhost:3306/Library?useSSL=false";    
	  private static final String user = "root";
	  private static final String password = "drc_DB2016";
	  private static Connection conn;
	  private static Statement stmt;
	  private static ResultSet rs;
	  private static String query;
	  private static BufferedReader br;
	  private static Scanner scan = new Scanner(System.in);
	  
	  Library lib = new Library();
	  
    public static void main(String[] args) throws ClassNotFoundException, SQLException{
    	//sql connection
        Class.forName("com.mysql.jdbc.Driver");
        conn = DriverManager.getConnection(url, user, password);
        stmt = conn.createStatement();
        System.out.println("Database connected successfully");
        
        
        System.out.println("Library API");
        int selection = 0;
        System.out.println(Library.s); 
        System.out.println("*****************************");
        System.out.println("1. Initialize Library");
        System.out.println("2. Login Library Manager");
        System.out.println("3. Login Library Associate");
        System.out.println("4. Login Library Member");
        System.out.println("*****************************");
        System.out.print("\tSelection:  ");
        selection = scan.nextInt();
        startApp(selection);
        
        stmt.close();
        conn.close();
    }

    public static void startApp(int selection){
         if (selection>0 && selection<5){
             switch(selection){
                 case 1: initLibrary();
                         break;
//                 case 2: lib.loginManager;
//                         break;
//                 case 3: lib.loginAssociate;
//                         break;
//                 case 4: lib.loginMember;
//                         break;
             }
         }
     }
    
    public static void initLibrary(){
    	createDB();
    }
    
    public static void createDB(){
        try {
            stmt.executeUpdate("create schema if not exists Library;");
        } catch (SQLException ex) {
        }
    	createManagersTable();
//    	createAssociatesTable();
//    	createMembersTable();
//    	createBooksTable();
    }
	private static void createManagersTable() {
		System.out.println("Creating Table: managers...");
        //init table
        String managersTable = "create table if not exists managers (" +
        					 	"fname		varchar(15)		not null,"+
        					 	"lname		varchar(15)		not null,"+
        					 	"username	varchar(15)		not null,"+
        					 	"password	varchar(15)		not null,"+
        					 	"primary key(username));";
        try {
            stmt.executeUpdate(managersTable);
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        populateManagers();
	}
	private static void populateManagers() {
		String insert = "insert into managers values("+
						"'LeBron', 'James', 'lbjames','manpass1'"+
						");";
		try {
			stmt.executeUpdate(insert);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	private static void createAssociatesTable() {
		System.out.println("Creating Table: associates...");
        //init table
        String associatesTable = "create table if not exists associates (" +
        					 	"fname		varchar(15)		not null"+
        					 	"lname		varchar(15)		not null"+
        					 	"username	varchar(15)		not null"+
        					 	"password	varchar(15)		not null"+
        					 	"primarykey(username));";
        try {
            stmt.executeUpdate(associatesTable);
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
	}
	private static void createMembersTable() {
		System.out.println("Creating Table: members...");
        //init table
        String membersTable = "create table if not exists members (" +
        					 	"fname			varchar(15)		not null"+
        					 	"lname			varchar(15)		not null"+
        					 	"address		varchar(50)		not null"+
        					 	"phone			varchar(10)		not null"+
        					 	"username		varchar(15)		not null"+
        					 	"password		varchar(15)		not null"+
        					 	"code			varchar(4)		not null"+
        					 	"primarykey(username));";
        try {
            stmt.executeUpdate(membersTable);
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
	}
	private static void createBooksTable() {
	}
}

//compile all neccessary files from root directory:
//  javac $(find . -name "*.java")
//Run program from main:
//  java app.main
